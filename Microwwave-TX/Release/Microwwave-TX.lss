
Microwwave-TX.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000470  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  00000470  00000504  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000005  00800074  00800074  00000518  2**0
                  ALLOC

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__vector_1>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__vector_11>
  30:	0c 94 e8 00 	jmp	0x1d0	; 0x1d0 <__vector_12>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e7       	ldi	r30, 0x70	; 112
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a4 37       	cpi	r26, 0x74	; 116
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a4 e7       	ldi	r26, 0x74	; 116
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a9 37       	cpi	r26, 0x79	; 121
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <main>
  8a:	0c 94 36 02 	jmp	0x46c	; 0x46c <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <iniatUart>:
  92:	9c 01       	movw	r18, r24
  94:	40 e0       	ldi	r20, 0x00	; 0
  96:	50 e0       	ldi	r21, 0x00	; 0
  98:	60 e4       	ldi	r22, 0x40	; 64
  9a:	72 e4       	ldi	r23, 0x42	; 66
  9c:	8f e0       	ldi	r24, 0x0F	; 15
  9e:	90 e0       	ldi	r25, 0x00	; 0
  a0:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <__divmodsi4>
  a4:	21 50       	subi	r18, 0x01	; 1
  a6:	30 40       	sbci	r19, 0x00	; 0
  a8:	86 e8       	ldi	r24, 0x86	; 134
  aa:	80 bd       	out	0x20, r24	; 32
  ac:	88 e1       	ldi	r24, 0x18	; 24
  ae:	8a b9       	out	0x0a, r24	; 10
  b0:	30 bd       	out	0x20, r19	; 32
  b2:	29 b9       	out	0x09, r18	; 9
  b4:	08 95       	ret

000000b6 <sendChar>:
  b6:	5d 9b       	sbis	0x0b, 5	; 11
  b8:	fe cf       	rjmp	.-4      	; 0xb6 <sendChar>
  ba:	8c b9       	out	0x0c, r24	; 12
  bc:	08 95       	ret

000000be <SendString>:
  be:	20 e0       	ldi	r18, 0x00	; 0
  c0:	04 c0       	rjmp	.+8      	; 0xca <SendString+0xc>
  c2:	5d 9b       	sbis	0x0b, 5	; 11
  c4:	fe cf       	rjmp	.-4      	; 0xc2 <SendString+0x4>
  c6:	2f 5f       	subi	r18, 0xFF	; 255
  c8:	ec b9       	out	0x0c, r30	; 12
  ca:	fc 01       	movw	r30, r24
  cc:	e2 0f       	add	r30, r18
  ce:	f1 1d       	adc	r31, r1
  d0:	e0 81       	ld	r30, Z
  d2:	ee 23       	and	r30, r30
  d4:	b1 f7       	brne	.-20     	; 0xc2 <SendString+0x4>
  d6:	08 95       	ret

000000d8 <receiveChar>:
  d8:	5f 9b       	sbis	0x0b, 7	; 11
  da:	fe cf       	rjmp	.-4      	; 0xd8 <receiveChar>
  dc:	8c b1       	in	r24, 0x0c	; 12
  de:	08 95       	ret

000000e0 <iniatUartInterrupt>:
  e0:	9c 01       	movw	r18, r24
  e2:	40 e0       	ldi	r20, 0x00	; 0
  e4:	50 e0       	ldi	r21, 0x00	; 0
  e6:	60 e4       	ldi	r22, 0x40	; 64
  e8:	72 e4       	ldi	r23, 0x42	; 66
  ea:	8f e0       	ldi	r24, 0x0F	; 15
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <__divmodsi4>
  f2:	21 50       	subi	r18, 0x01	; 1
  f4:	30 40       	sbci	r19, 0x00	; 0
  f6:	30 bd       	out	0x20, r19	; 32
  f8:	29 b9       	out	0x09, r18	; 9
  fa:	88 eb       	ldi	r24, 0xB8	; 184
  fc:	8a b9       	out	0x0a, r24	; 10
  fe:	86 e8       	ldi	r24, 0x86	; 134
 100:	80 bd       	out	0x20, r24	; 32
 102:	78 94       	sei
 104:	08 95       	ret

00000106 <txReadWriteCharInterrupt>:
 106:	88 23       	and	r24, r24
 108:	51 f4       	brne	.+20     	; 0x11e <txReadWriteCharInterrupt+0x18>
 10a:	80 91 61 00 	lds	r24, 0x0061
 10e:	88 23       	and	r24, r24
 110:	69 f4       	brne	.+26     	; 0x12c <txReadWriteCharInterrupt+0x26>
 112:	81 e0       	ldi	r24, 0x01	; 1
 114:	80 93 61 00 	sts	0x0061, r24
 118:	80 91 75 00 	lds	r24, 0x0075
 11c:	08 95       	ret
 11e:	81 30       	cpi	r24, 0x01	; 1
 120:	29 f4       	brne	.+10     	; 0x12c <txReadWriteCharInterrupt+0x26>
 122:	60 93 75 00 	sts	0x0075, r22
 126:	10 92 61 00 	sts	0x0061, r1
 12a:	08 95       	ret
 12c:	80 e0       	ldi	r24, 0x00	; 0
 12e:	08 95       	ret

00000130 <rxReadWriteCharInterrupt>:
 130:	88 23       	and	r24, r24
 132:	51 f4       	brne	.+20     	; 0x148 <rxReadWriteCharInterrupt+0x18>
 134:	80 91 60 00 	lds	r24, 0x0060
 138:	88 23       	and	r24, r24
 13a:	79 f4       	brne	.+30     	; 0x15a <rxReadWriteCharInterrupt+0x2a>
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	80 93 60 00 	sts	0x0060, r24
 142:	80 91 74 00 	lds	r24, 0x0074
 146:	08 95       	ret
 148:	81 30       	cpi	r24, 0x01	; 1
 14a:	39 f4       	brne	.+14     	; 0x15a <rxReadWriteCharInterrupt+0x2a>
 14c:	8c b1       	in	r24, 0x0c	; 12
 14e:	80 93 74 00 	sts	0x0074, r24
 152:	10 92 60 00 	sts	0x0060, r1
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	08 95       	ret
 15a:	80 e0       	ldi	r24, 0x00	; 0
 15c:	08 95       	ret

0000015e <SendStringInterrupt>:
 15e:	1f 93       	push	r17
 160:	cf 93       	push	r28
 162:	df 93       	push	r29
 164:	ec 01       	movw	r28, r24
 166:	10 e0       	ldi	r17, 0x00	; 0
 168:	04 c0       	rjmp	.+8      	; 0x172 <SendStringInterrupt+0x14>
 16a:	1f 5f       	subi	r17, 0xFF	; 255
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	0e 94 83 00 	call	0x106	; 0x106 <txReadWriteCharInterrupt>
 172:	fe 01       	movw	r30, r28
 174:	e1 0f       	add	r30, r17
 176:	f1 1d       	adc	r31, r1
 178:	60 81       	ld	r22, Z
 17a:	66 23       	and	r22, r22
 17c:	b1 f7       	brne	.-20     	; 0x16a <SendStringInterrupt+0xc>
 17e:	df 91       	pop	r29
 180:	cf 91       	pop	r28
 182:	1f 91       	pop	r17
 184:	08 95       	ret

00000186 <__vector_11>:
 186:	1f 92       	push	r1
 188:	0f 92       	push	r0
 18a:	0f b6       	in	r0, 0x3f	; 63
 18c:	0f 92       	push	r0
 18e:	11 24       	eor	r1, r1
 190:	2f 93       	push	r18
 192:	3f 93       	push	r19
 194:	4f 93       	push	r20
 196:	5f 93       	push	r21
 198:	6f 93       	push	r22
 19a:	7f 93       	push	r23
 19c:	8f 93       	push	r24
 19e:	9f 93       	push	r25
 1a0:	af 93       	push	r26
 1a2:	bf 93       	push	r27
 1a4:	ef 93       	push	r30
 1a6:	ff 93       	push	r31
 1a8:	81 e0       	ldi	r24, 0x01	; 1
 1aa:	0e 94 98 00 	call	0x130	; 0x130 <rxReadWriteCharInterrupt>
 1ae:	ff 91       	pop	r31
 1b0:	ef 91       	pop	r30
 1b2:	bf 91       	pop	r27
 1b4:	af 91       	pop	r26
 1b6:	9f 91       	pop	r25
 1b8:	8f 91       	pop	r24
 1ba:	7f 91       	pop	r23
 1bc:	6f 91       	pop	r22
 1be:	5f 91       	pop	r21
 1c0:	4f 91       	pop	r20
 1c2:	3f 91       	pop	r19
 1c4:	2f 91       	pop	r18
 1c6:	0f 90       	pop	r0
 1c8:	0f be       	out	0x3f, r0	; 63
 1ca:	0f 90       	pop	r0
 1cc:	1f 90       	pop	r1
 1ce:	18 95       	reti

000001d0 <__vector_12>:
 1d0:	1f 92       	push	r1
 1d2:	0f 92       	push	r0
 1d4:	0f b6       	in	r0, 0x3f	; 63
 1d6:	0f 92       	push	r0
 1d8:	11 24       	eor	r1, r1
 1da:	2f 93       	push	r18
 1dc:	3f 93       	push	r19
 1de:	4f 93       	push	r20
 1e0:	5f 93       	push	r21
 1e2:	6f 93       	push	r22
 1e4:	7f 93       	push	r23
 1e6:	8f 93       	push	r24
 1e8:	9f 93       	push	r25
 1ea:	af 93       	push	r26
 1ec:	bf 93       	push	r27
 1ee:	ef 93       	push	r30
 1f0:	ff 93       	push	r31
 1f2:	80 e0       	ldi	r24, 0x00	; 0
 1f4:	60 e0       	ldi	r22, 0x00	; 0
 1f6:	0e 94 83 00 	call	0x106	; 0x106 <txReadWriteCharInterrupt>
 1fa:	81 11       	cpse	r24, r1
 1fc:	8c b9       	out	0x0c, r24	; 12
 1fe:	ff 91       	pop	r31
 200:	ef 91       	pop	r30
 202:	bf 91       	pop	r27
 204:	af 91       	pop	r26
 206:	9f 91       	pop	r25
 208:	8f 91       	pop	r24
 20a:	7f 91       	pop	r23
 20c:	6f 91       	pop	r22
 20e:	5f 91       	pop	r21
 210:	4f 91       	pop	r20
 212:	3f 91       	pop	r19
 214:	2f 91       	pop	r18
 216:	0f 90       	pop	r0
 218:	0f be       	out	0x3f, r0	; 63
 21a:	0f 90       	pop	r0
 21c:	1f 90       	pop	r1
 21e:	18 95       	reti

00000220 <keyboardIntiat>:
 220:	80 ef       	ldi	r24, 0xF0	; 240
 222:	84 bb       	out	0x14, r24	; 20
 224:	8f ef       	ldi	r24, 0xFF	; 255
 226:	85 bb       	out	0x15, r24	; 21
 228:	08 95       	ret

0000022a <keyboardScan>:
 22a:	df 93       	push	r29
 22c:	cf 93       	push	r28
 22e:	cd b7       	in	r28, 0x3d	; 61
 230:	de b7       	in	r29, 0x3e	; 62
 232:	60 97       	sbiw	r28, 0x10	; 16
 234:	0f b6       	in	r0, 0x3f	; 63
 236:	f8 94       	cli
 238:	de bf       	out	0x3e, r29	; 62
 23a:	0f be       	out	0x3f, r0	; 63
 23c:	cd bf       	out	0x3d, r28	; 61
 23e:	de 01       	movw	r26, r28
 240:	11 96       	adiw	r26, 0x01	; 1
 242:	e3 e6       	ldi	r30, 0x63	; 99
 244:	f0 e0       	ldi	r31, 0x00	; 0
 246:	80 e1       	ldi	r24, 0x10	; 16
 248:	01 90       	ld	r0, Z+
 24a:	0d 92       	st	X+, r0
 24c:	81 50       	subi	r24, 0x01	; 1
 24e:	e1 f7       	brne	.-8      	; 0x248 <keyboardScan+0x1e>
 250:	85 b3       	in	r24, 0x15	; 21
 252:	8f 70       	andi	r24, 0x0F	; 15
 254:	85 bb       	out	0x15, r24	; 21
 256:	83 b3       	in	r24, 0x13	; 19
 258:	8f 70       	andi	r24, 0x0F	; 15
 25a:	8f 30       	cpi	r24, 0x0F	; 15
 25c:	c9 f7       	brne	.-14     	; 0x250 <keyboardScan+0x26>
 25e:	28 ec       	ldi	r18, 0xC8	; 200
 260:	30 e0       	ldi	r19, 0x00	; 0
 262:	40 e9       	ldi	r20, 0x90	; 144
 264:	51 e0       	ldi	r21, 0x01	; 1
 266:	09 c0       	rjmp	.+18     	; 0x27a <keyboardScan+0x50>
 268:	ca 01       	movw	r24, r20
 26a:	01 97       	sbiw	r24, 0x01	; 1
 26c:	f1 f7       	brne	.-4      	; 0x26a <keyboardScan+0x40>
 26e:	21 50       	subi	r18, 0x01	; 1
 270:	30 40       	sbci	r19, 0x00	; 0
 272:	03 c0       	rjmp	.+6      	; 0x27a <keyboardScan+0x50>
 274:	28 ec       	ldi	r18, 0xC8	; 200
 276:	30 e0       	ldi	r19, 0x00	; 0
 278:	f7 cf       	rjmp	.-18     	; 0x268 <keyboardScan+0x3e>
 27a:	21 15       	cp	r18, r1
 27c:	31 05       	cpc	r19, r1
 27e:	a1 f7       	brne	.-24     	; 0x268 <keyboardScan+0x3e>
 280:	83 b3       	in	r24, 0x13	; 19
 282:	8f 70       	andi	r24, 0x0F	; 15
 284:	8f 30       	cpi	r24, 0x0F	; 15
 286:	b1 f3       	breq	.-20     	; 0x274 <keyboardScan+0x4a>
 288:	88 ec       	ldi	r24, 0xC8	; 200
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	fa 01       	movw	r30, r20
 28e:	31 97       	sbiw	r30, 0x01	; 1
 290:	f1 f7       	brne	.-4      	; 0x28e <keyboardScan+0x64>
 292:	01 97       	sbiw	r24, 0x01	; 1
 294:	d9 f7       	brne	.-10     	; 0x28c <keyboardScan+0x62>
 296:	83 b3       	in	r24, 0x13	; 19
 298:	8f 70       	andi	r24, 0x0F	; 15
 29a:	8f 30       	cpi	r24, 0x0F	; 15
 29c:	59 f3       	breq	.-42     	; 0x274 <keyboardScan+0x4a>
 29e:	4f ee       	ldi	r20, 0xEF	; 239
 2a0:	3f ed       	ldi	r19, 0xDF	; 223
 2a2:	2f eb       	ldi	r18, 0xBF	; 191
 2a4:	9f e7       	ldi	r25, 0x7F	; 127
 2a6:	45 bb       	out	0x15, r20	; 21
 2a8:	83 b3       	in	r24, 0x13	; 19
 2aa:	8f 70       	andi	r24, 0x0F	; 15
 2ac:	8f 30       	cpi	r24, 0x0F	; 15
 2ae:	11 f0       	breq	.+4      	; 0x2b4 <keyboardScan+0x8a>
 2b0:	e0 e0       	ldi	r30, 0x00	; 0
 2b2:	14 c0       	rjmp	.+40     	; 0x2dc <keyboardScan+0xb2>
 2b4:	35 bb       	out	0x15, r19	; 21
 2b6:	83 b3       	in	r24, 0x13	; 19
 2b8:	8f 70       	andi	r24, 0x0F	; 15
 2ba:	8f 30       	cpi	r24, 0x0F	; 15
 2bc:	11 f0       	breq	.+4      	; 0x2c2 <keyboardScan+0x98>
 2be:	e1 e0       	ldi	r30, 0x01	; 1
 2c0:	0d c0       	rjmp	.+26     	; 0x2dc <keyboardScan+0xb2>
 2c2:	25 bb       	out	0x15, r18	; 21
 2c4:	83 b3       	in	r24, 0x13	; 19
 2c6:	8f 70       	andi	r24, 0x0F	; 15
 2c8:	8f 30       	cpi	r24, 0x0F	; 15
 2ca:	11 f0       	breq	.+4      	; 0x2d0 <keyboardScan+0xa6>
 2cc:	e2 e0       	ldi	r30, 0x02	; 2
 2ce:	06 c0       	rjmp	.+12     	; 0x2dc <keyboardScan+0xb2>
 2d0:	95 bb       	out	0x15, r25	; 21
 2d2:	83 b3       	in	r24, 0x13	; 19
 2d4:	8f 70       	andi	r24, 0x0F	; 15
 2d6:	8f 30       	cpi	r24, 0x0F	; 15
 2d8:	31 f3       	breq	.-52     	; 0x2a6 <keyboardScan+0x7c>
 2da:	e3 e0       	ldi	r30, 0x03	; 3
 2dc:	8e 30       	cpi	r24, 0x0E	; 14
 2de:	11 f4       	brne	.+4      	; 0x2e4 <keyboardScan+0xba>
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	09 c0       	rjmp	.+18     	; 0x2f6 <keyboardScan+0xcc>
 2e4:	8d 30       	cpi	r24, 0x0D	; 13
 2e6:	11 f4       	brne	.+4      	; 0x2ec <keyboardScan+0xc2>
 2e8:	81 e0       	ldi	r24, 0x01	; 1
 2ea:	05 c0       	rjmp	.+10     	; 0x2f6 <keyboardScan+0xcc>
 2ec:	8b 30       	cpi	r24, 0x0B	; 11
 2ee:	11 f0       	breq	.+4      	; 0x2f4 <keyboardScan+0xca>
 2f0:	83 e0       	ldi	r24, 0x03	; 3
 2f2:	01 c0       	rjmp	.+2      	; 0x2f6 <keyboardScan+0xcc>
 2f4:	82 e0       	ldi	r24, 0x02	; 2
 2f6:	f0 e0       	ldi	r31, 0x00	; 0
 2f8:	ee 0f       	add	r30, r30
 2fa:	ff 1f       	adc	r31, r31
 2fc:	ee 0f       	add	r30, r30
 2fe:	ff 1f       	adc	r31, r31
 300:	e8 0f       	add	r30, r24
 302:	f1 1d       	adc	r31, r1
 304:	ec 0f       	add	r30, r28
 306:	fd 1f       	adc	r31, r29
 308:	81 81       	ldd	r24, Z+1	; 0x01
 30a:	60 96       	adiw	r28, 0x10	; 16
 30c:	0f b6       	in	r0, 0x3f	; 63
 30e:	f8 94       	cli
 310:	de bf       	out	0x3e, r29	; 62
 312:	0f be       	out	0x3f, r0	; 63
 314:	cd bf       	out	0x3d, r28	; 61
 316:	cf 91       	pop	r28
 318:	df 91       	pop	r29
 31a:	08 95       	ret

0000031c <__vector_1>:
 31c:	1f 92       	push	r1
 31e:	0f 92       	push	r0
 320:	0f b6       	in	r0, 0x3f	; 63
 322:	0f 92       	push	r0
 324:	11 24       	eor	r1, r1
 326:	95 98       	cbi	0x12, 5	; 18
 328:	0f 90       	pop	r0
 32a:	0f be       	out	0x3f, r0	; 63
 32c:	0f 90       	pop	r0
 32e:	1f 90       	pop	r1
 330:	18 95       	reti

00000332 <wait_startOrStop_pushed>:
 332:	20 91 62 00 	lds	r18, 0x0062
 336:	40 e4       	ldi	r20, 0x40	; 64
 338:	5f e1       	ldi	r21, 0x1F	; 31
 33a:	01 c0       	rjmp	.+2      	; 0x33e <wait_startOrStop_pushed+0xc>
 33c:	29 2f       	mov	r18, r25
 33e:	89 b3       	in	r24, 0x19	; 25
 340:	98 2f       	mov	r25, r24
 342:	91 70       	andi	r25, 0x01	; 1
 344:	80 fd       	sbrc	r24, 0
 346:	fa cf       	rjmp	.-12     	; 0x33c <wait_startOrStop_pushed+0xa>
 348:	22 23       	and	r18, r18
 34a:	c1 f3       	breq	.-16     	; 0x33c <wait_startOrStop_pushed+0xa>
 34c:	ca 01       	movw	r24, r20
 34e:	01 97       	sbiw	r24, 0x01	; 1
 350:	f1 f7       	brne	.-4      	; 0x34e <wait_startOrStop_pushed+0x1c>
 352:	89 b3       	in	r24, 0x19	; 25
 354:	18 ba       	out	0x18, r1	; 24
 356:	98 2f       	mov	r25, r24
 358:	91 70       	andi	r25, 0x01	; 1
 35a:	80 fd       	sbrc	r24, 0
 35c:	ef cf       	rjmp	.-34     	; 0x33c <wait_startOrStop_pushed+0xa>
 35e:	90 93 62 00 	sts	0x0062, r25
 362:	80 91 76 00 	lds	r24, 0x0076
 366:	88 23       	and	r24, r24
 368:	11 f4       	brne	.+4      	; 0x36e <wait_startOrStop_pushed+0x3c>
 36a:	8d e3       	ldi	r24, 0x3D	; 61
 36c:	01 c0       	rjmp	.+2      	; 0x370 <wait_startOrStop_pushed+0x3e>
 36e:	8c e3       	ldi	r24, 0x3C	; 60
 370:	0e 94 5b 00 	call	0xb6	; 0xb6 <sendChar>
 374:	10 92 76 00 	sts	0x0076, r1
 378:	08 95       	ret

0000037a <read_send_time>:
 37a:	0f 93       	push	r16
 37c:	1f 93       	push	r17
 37e:	00 e0       	ldi	r16, 0x00	; 0
 380:	0e 94 15 01 	call	0x22a	; 0x22a <keyboardScan>
 384:	18 2f       	mov	r17, r24
 386:	80 53       	subi	r24, 0x30	; 48
 388:	8a 30       	cpi	r24, 0x0A	; 10
 38a:	20 f4       	brcc	.+8      	; 0x394 <read_send_time+0x1a>
 38c:	81 2f       	mov	r24, r17
 38e:	0e 94 5b 00 	call	0xb6	; 0xb6 <sendChar>
 392:	0f 5f       	subi	r16, 0xFF	; 255
 394:	1d 33       	cpi	r17, 0x3D	; 61
 396:	11 f0       	breq	.+4      	; 0x39c <read_send_time+0x22>
 398:	03 30       	cpi	r16, 0x03	; 3
 39a:	90 f3       	brcs	.-28     	; 0x380 <read_send_time+0x6>
 39c:	8d e3       	ldi	r24, 0x3D	; 61
 39e:	0e 94 5b 00 	call	0xb6	; 0xb6 <sendChar>
 3a2:	1f 91       	pop	r17
 3a4:	0f 91       	pop	r16
 3a6:	08 95       	ret

000003a8 <read_send_option>:
 3a8:	0e 94 15 01 	call	0x22a	; 0x22a <keyboardScan>
 3ac:	8f 32       	cpi	r24, 0x2F	; 47
 3ae:	31 f0       	breq	.+12     	; 0x3bc <read_send_option+0x14>
 3b0:	8a 32       	cpi	r24, 0x2A	; 42
 3b2:	21 f0       	breq	.+8      	; 0x3bc <read_send_option+0x14>
 3b4:	8d 32       	cpi	r24, 0x2D	; 45
 3b6:	11 f0       	breq	.+4      	; 0x3bc <read_send_option+0x14>
 3b8:	8b 32       	cpi	r24, 0x2B	; 43
 3ba:	b1 f7       	brne	.-20     	; 0x3a8 <read_send_option>
 3bc:	0e 94 5b 00 	call	0xb6	; 0xb6 <sendChar>
 3c0:	08 95       	ret

000003c2 <main>:
 3c2:	d0 98       	cbi	0x1a, 0	; 26
 3c4:	d8 9a       	sbi	0x1b, 0	; 27
 3c6:	8d 9a       	sbi	0x11, 5	; 17
 3c8:	95 9a       	sbi	0x12, 5	; 18
 3ca:	0e 94 10 01 	call	0x220	; 0x220 <keyboardIntiat>
 3ce:	80 e8       	ldi	r24, 0x80	; 128
 3d0:	95 e2       	ldi	r25, 0x25	; 37
 3d2:	0e 94 49 00 	call	0x92	; 0x92 <iniatUart>
 3d6:	92 9a       	sbi	0x12, 2	; 18
 3d8:	82 e0       	ldi	r24, 0x02	; 2
 3da:	85 bf       	out	0x35, r24	; 53
 3dc:	80 e4       	ldi	r24, 0x40	; 64
 3de:	8b bf       	out	0x3b, r24	; 59
 3e0:	78 94       	sei
 3e2:	d9 98       	cbi	0x1b, 1	; 27
 3e4:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <read_send_option>
 3e8:	0e 94 bd 01 	call	0x37a	; 0x37a <read_send_time>
 3ec:	0e 94 99 01 	call	0x332	; 0x332 <wait_startOrStop_pushed>
 3f0:	f8 cf       	rjmp	.-16     	; 0x3e2 <main+0x20>

000003f2 <__divmodsi4>:
 3f2:	97 fb       	bst	r25, 7
 3f4:	09 2e       	mov	r0, r25
 3f6:	05 26       	eor	r0, r21
 3f8:	0e d0       	rcall	.+28     	; 0x416 <__divmodsi4_neg1>
 3fa:	57 fd       	sbrc	r21, 7
 3fc:	04 d0       	rcall	.+8      	; 0x406 <__divmodsi4_neg2>
 3fe:	14 d0       	rcall	.+40     	; 0x428 <__udivmodsi4>
 400:	0a d0       	rcall	.+20     	; 0x416 <__divmodsi4_neg1>
 402:	00 1c       	adc	r0, r0
 404:	38 f4       	brcc	.+14     	; 0x414 <__divmodsi4_exit>

00000406 <__divmodsi4_neg2>:
 406:	50 95       	com	r21
 408:	40 95       	com	r20
 40a:	30 95       	com	r19
 40c:	21 95       	neg	r18
 40e:	3f 4f       	sbci	r19, 0xFF	; 255
 410:	4f 4f       	sbci	r20, 0xFF	; 255
 412:	5f 4f       	sbci	r21, 0xFF	; 255

00000414 <__divmodsi4_exit>:
 414:	08 95       	ret

00000416 <__divmodsi4_neg1>:
 416:	f6 f7       	brtc	.-4      	; 0x414 <__divmodsi4_exit>
 418:	90 95       	com	r25
 41a:	80 95       	com	r24
 41c:	70 95       	com	r23
 41e:	61 95       	neg	r22
 420:	7f 4f       	sbci	r23, 0xFF	; 255
 422:	8f 4f       	sbci	r24, 0xFF	; 255
 424:	9f 4f       	sbci	r25, 0xFF	; 255
 426:	08 95       	ret

00000428 <__udivmodsi4>:
 428:	a1 e2       	ldi	r26, 0x21	; 33
 42a:	1a 2e       	mov	r1, r26
 42c:	aa 1b       	sub	r26, r26
 42e:	bb 1b       	sub	r27, r27
 430:	fd 01       	movw	r30, r26
 432:	0d c0       	rjmp	.+26     	; 0x44e <__udivmodsi4_ep>

00000434 <__udivmodsi4_loop>:
 434:	aa 1f       	adc	r26, r26
 436:	bb 1f       	adc	r27, r27
 438:	ee 1f       	adc	r30, r30
 43a:	ff 1f       	adc	r31, r31
 43c:	a2 17       	cp	r26, r18
 43e:	b3 07       	cpc	r27, r19
 440:	e4 07       	cpc	r30, r20
 442:	f5 07       	cpc	r31, r21
 444:	20 f0       	brcs	.+8      	; 0x44e <__udivmodsi4_ep>
 446:	a2 1b       	sub	r26, r18
 448:	b3 0b       	sbc	r27, r19
 44a:	e4 0b       	sbc	r30, r20
 44c:	f5 0b       	sbc	r31, r21

0000044e <__udivmodsi4_ep>:
 44e:	66 1f       	adc	r22, r22
 450:	77 1f       	adc	r23, r23
 452:	88 1f       	adc	r24, r24
 454:	99 1f       	adc	r25, r25
 456:	1a 94       	dec	r1
 458:	69 f7       	brne	.-38     	; 0x434 <__udivmodsi4_loop>
 45a:	60 95       	com	r22
 45c:	70 95       	com	r23
 45e:	80 95       	com	r24
 460:	90 95       	com	r25
 462:	9b 01       	movw	r18, r22
 464:	ac 01       	movw	r20, r24
 466:	bd 01       	movw	r22, r26
 468:	cf 01       	movw	r24, r30
 46a:	08 95       	ret

0000046c <_exit>:
 46c:	f8 94       	cli

0000046e <__stop_program>:
 46e:	ff cf       	rjmp	.-2      	; 0x46e <__stop_program>
